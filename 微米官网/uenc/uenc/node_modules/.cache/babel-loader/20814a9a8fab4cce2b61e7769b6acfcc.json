{"remainingRequest":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\thread-loader\\dist\\cjs.js!D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\babel-loader\\lib\\index.js!D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\src\\components\\m\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\src\\components\\m\\Login.vue","mtime":1622530290218},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:/weimi/Micron-official-website/\\u5FAE\\u7C73\\u5B98\\u7F51/uenc/uenc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/weimi/Micron-official-website/\\u5FAE\\u7C73\\u5B98\\u7F51/uenc/uenc/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:/weimi/Micron-official-website/\\u5FAE\\u7C73\\u5B98\\u7F51/uenc/uenc/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar LoginForm = function LoginForm() {\n  _classCallCheck(this, LoginForm);\n\n  this.loginName = \"\";\n  this.password = \"\";\n  this.code = \"\";\n  this.autoLogin = false;\n};\n\nvar RegisteredForm = function RegisteredForm() {\n  _classCallCheck(this, RegisteredForm);\n\n  this.loginName = \"\";\n  this.email = \"\";\n  this.phonenumber = \"\";\n  this.password = \"\";\n  this.arginPassword = \"\";\n  this.code = \"\"; // this.autoLogin = false;\n};\n\nvar UpdatePwdForm = function UpdatePwdForm() {\n  _classCallCheck(this, UpdatePwdForm);\n\n  this.phonenumber = \"\";\n  this.password = \"\";\n  this.code = \"\";\n  this.arginPassword = \"\";\n};\n\nimport { Registered, GetCaptchaImage, Login, UpdatePwd, GetCode } from \"@/assets/server/api.js\";\nexport default {\n  data: function data() {\n    var _updatePwdRule;\n\n    return {\n      activeName: \"\",\n      loginForm: new LoginForm(),\n      registeredForm: new RegisteredForm(),\n      updatePwdForm: new UpdatePwdForm(),\n      isForget: false,\n      imgSrc: \"\",\n      loginRule: {\n        loginName: [{\n          required: true,\n          message: this.$t(\"index.switch\") === \"cn\" ? \"请输入登录名\" : \"enter your login name\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          pattern: /^(\\w){6,20}$/,\n          message: this.$t(\"index.switch\") === \"cn\" ? \"密码格式不对\" : \"Incorrect password format\",\n          trigger: \"blur\"\n        }],\n        code: [{\n          required: true,\n          message: this.$t(\"index.switch\") === \"cn\" ? \"请输入验证码\" : \"enter your verification code\",\n          trigger: \"blur\"\n        }]\n      },\n      registeredRule: {\n        loginName: [{\n          required: true,\n          message: this.$t(\"index.switch\") === \"cn\" ? \"请输入登录名\" : \"enter your login name\",\n          trigger: \"blur\"\n        }],\n        email: [{\n          required: true,\n          message: this.$t(\"index.switch\") === \"cn\" ? \"请输入正确的邮箱格式\" : \"enter the correct email format\",\n          trigger: \"blur\",\n          pattern: /\\w+@[a-z0-9]+\\.[a-z]{2,4}/\n        }],\n        phonenumber: [{\n          required: true,\n          message: this.$t(\"index.switch\") === \"cn\" ? \"请输入正确的手机号\" : \"input the correct mobile phone\",\n          trigger: \"blur\",\n          pattern: /^1[3|4|5|7|8][0-9]\\d{8}$/\n        }],\n        password: [{\n          required: true,\n          pattern: /^(\\w){6,20}$/,\n          message: this.$t(\"index.switch\") === \"cn\" ? \"密码格式不对\" : \"Incorrect password format\",\n          trigger: \"blur\"\n        }],\n        arginPassword: [{\n          required: true,\n          pattern: /^(\\w){6,20}$/,\n          message: this.$t(\"index.switch\") === \"cn\" ? \"密码格式不对\" : \"Incorrect password format\",\n          trigger: \"blur\"\n        }],\n        code: [{\n          required: true,\n          message: this.$t(\"index.switch\") === \"cn\" ? \"请输入验证码\" : \"enter your verification code\",\n          trigger: \"blur\"\n        }]\n      },\n      updatePwdRule: (_updatePwdRule = {\n        phonenumber: [{\n          required: true,\n          message: this.$t(\"index.switch\") === \"cn\" ? \"请输入登录名\" : \"enter your login name\",\n          trigger: \"blur\",\n          pattern: /^1[3|4|5|7|8][0-9]\\d{8}$/\n        }],\n        password: [{\n          required: true,\n          pattern: /^(\\w){6,20}$/,\n          message: this.$t(\"index.switch\") === \"cn\" ? \"密码格式不对\" : \"Incorrect password format\",\n          trigger: \"blur\"\n        }]\n      }, _defineProperty(_updatePwdRule, \"password\", [{\n        required: true,\n        pattern: /^(\\w){6,20}$/,\n        message: this.$t(\"index.switch\") === \"cn\" ? \"密码格式不对\" : \"Incorrect password format\",\n        trigger: \"blur\"\n      }]), _defineProperty(_updatePwdRule, \"code\", [{\n        required: true,\n        message: this.$t(\"index.switch\") === \"cn\" ? \"请输入验证码\" : \"enter your verification code\",\n        trigger: \"blur\"\n      }]), _updatePwdRule),\n      count: 60,\n      timer: null\n    };\n  },\n  props: {\n    dialogType: {\n      type: String,\n      default: \"\"\n    }\n  },\n  watch: {\n    dialogType: function dialogType(newValue, oldValue) {\n      this.activeName = newValue;\n    },\n    activeName: function activeName(newValue, oldValue) {\n      clearInterval(this.timer);\n      this.timer = null;\n      this.count = 60;\n    }\n  },\n  created: function created() {\n    this.getCaptchaImage();\n    this.activeName = this.dialogType;\n  },\n  methods: {\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(type) {\n        var _this = this;\n\n        var reg, str, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                reg = /^1[3|4|5|7|8][0-9]\\d{8}$/;\n\n                if (!(!reg.test(this[type].phonenumber) || this[type].phonenumber === \"\")) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$notify({\n                  type: \"warning\",\n                  message: this.$t(\"index.switch\") === \"cn\" ? \"请输入正确手机号\" : \"enter the correct phone number\"\n                }));\n\n              case 3:\n                str = '';\n\n                if (type === 'registeredForm') {\n                  str = this[type].phonenumber + '/reg';\n                } else {\n                  str = this[type].phonenumber + '/pwd';\n                }\n\n                _context.next = 7;\n                return GetCode(str);\n\n              case 7:\n                data = _context.sent;\n\n                if (!(data.code == '500')) {\n                  _context.next = 10;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$notify({\n                  type: \"error\",\n                  message: data.msg\n                }));\n\n              case 10:\n                this.timer = setInterval(function () {\n                  _this.count--;\n\n                  if (_this.count <= 0) {\n                    clearInterval(_this.timer);\n                    _this.timer = null;\n                    _this.count = 60;\n                  }\n                }, 1000); // console.log(data, \"data\");\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }(),\n    onRegistered: function () {\n      var _onRegistered = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.$refs[\"register\"].validate( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(valid) {\n                    var data;\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!valid) {\n                              _context2.next = 9;\n                              break;\n                            }\n\n                            if (!(_this2.registeredForm.password !== _this2.registeredForm.arginPassword)) {\n                              _context2.next = 3;\n                              break;\n                            }\n\n                            return _context2.abrupt(\"return\", _this2.$notify({\n                              type: \"error\",\n                              message: _this2.$t(\"index.switch\") === \"cn\" ? \"两次密码输入不一致\" : \"passwords do not match\"\n                            }));\n\n                          case 3:\n                            _context2.next = 5;\n                            return Registered(_objectSpread({}, _this2.registeredForm));\n\n                          case 5:\n                            data = _context2.sent;\n\n                            if (data.code === 0) {\n                              _this2.$notify({\n                                type: \"success\",\n                                message: _this2.$t(\"index.switch\") === \"cn\" ? \"注册成功\" : \"success\"\n                              });\n\n                              _this2.activeName = \"login\";\n                              _this2.registeredForm = new RegisteredForm();\n                              _this2.count = 60;\n                              clearInterval(_this2.timer);\n                              _this2.timer = null;\n                            } else {\n                              _this2.$notify({\n                                type: \"error\",\n                                message: data.msg\n                              });\n                            }\n\n                            _context2.next = 10;\n                            break;\n\n                          case 9:\n                            return _context2.abrupt(\"return\", false);\n\n                          case 10:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x2) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function onRegistered() {\n        return _onRegistered.apply(this, arguments);\n      }\n\n      return onRegistered;\n    }(),\n    getCaptchaImage: function () {\n      var _getCaptchaImage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return GetCaptchaImage();\n\n              case 2:\n                data = _context4.sent;\n                this.imgSrc = window.URL.createObjectURL(data.data);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getCaptchaImage() {\n        return _getCaptchaImage.apply(this, arguments);\n      }\n\n      return getCaptchaImage;\n    }(),\n    onLogin: function onLogin() {\n      var _this3 = this;\n\n      this.$refs[\"login\"].validate( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(valid) {\n          var data;\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  if (!valid) {\n                    _context5.next = 7;\n                    break;\n                  }\n\n                  _context5.next = 3;\n                  return Login(_objectSpread({}, _this3.loginForm));\n\n                case 3:\n                  data = _context5.sent;\n\n                  if (data.code === 0) {\n                    _this3.$notify({\n                      type: \"success\",\n                      message: _this3.$t(\"index.switch\") === \"cn\" ? \"登录成功！\" : \"success\"\n                    });\n\n                    _this3.$emit(\"close\");\n\n                    _this3.$emit(\"showUserInfo\", data.data);\n\n                    _this3.$emit(\"checkUsersStatus\");\n\n                    localStorage.setItem(\"username\", data.data);\n                    _this3.loginForm = new LoginForm();\n                  } else {\n                    _this3.$notify({\n                      type: \"error\",\n                      message: data.msg\n                    });\n                  }\n\n                  _context5.next = 8;\n                  break;\n\n                case 7:\n                  return _context5.abrupt(\"return\", false);\n\n                case 8:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x3) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    onUpdatePwd: function () {\n      var _onUpdatePwd = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        var _this4 = this;\n\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.$refs[\"updatePwd\"].validate( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(valid) {\n                    var data;\n                    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            if (!valid) {\n                              _context6.next = 9;\n                              break;\n                            }\n\n                            if (!(_this4.updatePwdForm.password !== _this4.updatePwdForm.arginPassword)) {\n                              _context6.next = 3;\n                              break;\n                            }\n\n                            return _context6.abrupt(\"return\", _this4.$notify({\n                              type: \"error\",\n                              message: _this4.$t(\"index.switch\") === \"cn\" ? \"两次密码输入不一致\" : \"passwords do not match\"\n                            }));\n\n                          case 3:\n                            _context6.next = 5;\n                            return UpdatePwd(_objectSpread({}, _this4.updatePwdForm));\n\n                          case 5:\n                            data = _context6.sent;\n\n                            if (data.code === 0) {\n                              _this4.$notify({\n                                type: \"success\",\n                                message: _this4.$t(\"index.switch\") === \"cn\" ? \"密码修改成功，请登录！\" : \"success\"\n                              });\n\n                              _this4.activeName = \"login\";\n                              _this4.updatePwdForm = new UpdatePwdForm();\n                            } else {\n                              _this4.$notify({\n                                type: \"error\",\n                                message: data.msg\n                              });\n                            }\n\n                            _context6.next = 11;\n                            break;\n\n                          case 9:\n                            console.log(\"error submit!!\");\n                            return _context6.abrupt(\"return\", false);\n\n                          case 11:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6);\n                  }));\n\n                  return function (_x4) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function onUpdatePwd() {\n        return _onUpdatePwd.apply(this, arguments);\n      }\n\n      return onUpdatePwd;\n    }()\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n * @Author: yaoyuting\n * @Date: 2021-04-16 08:54:18\n * @LastEditors: yaoyuting\n * @LastEditTime: 2021-05-18 21:28:37\n * @Descripttion: \n-->\n<template>\n  <div class=\"Login-m\">\n    <!-- <img class=\"logo\" src=\"@/assets/imagesm/logo@2x.png\" alt=\"\" /> -->\n    <p v-show=\"activeName === 'login'\" class=\"form_all_title\">\n      {{ $t(\"dialog.login\") }}\n    </p>\n    <p v-show=\"activeName === 'register'\" class=\"form_all_title\">\n      {{ $t(\"navbar.Register\") }}\n    </p>\n    <p v-show=\"activeName === 'third'\" class=\"form_all_title\">\n      {{ $t(\"dialog.Forgot\") }}\n    </p>\n    <el-form\n      ref=\"login\"\n      v-if=\"activeName === 'login'\"\n      :model=\"loginForm\"\n      class=\"demo-form-inline\"\n      :rules=\"loginRule\"\n    >\n      <el-form-item label=\"\" prop=\"loginName\" key=\"login1\">\n        <el-input\n          v-model=\"loginForm.loginName\"\n          :placeholder=\"$t('dialog.enteru')\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"\" prop=\"password\" key=\"login2\">\n        <el-input\n          v-model=\"loginForm.password\"\n          :placeholder=\"$t('dialog.enterpw')\"\n          type=\"password\"\n          autocomplete=\"new-password\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"\" prop=\"code\" key=\"login3\">\n        <div class=\"between\">\n          <el-input\n            v-model=\"loginForm.code\"\n            :placeholder=\"$t('dialog.code')\"\n          ></el-input>\n          <img :src=\"imgSrc\" alt=\"\" @click=\"getCaptchaImage\" />\n        </div>\n      </el-form-item>\n      <el-form-item>\n        <div @click=\"onLogin\" class=\"submit\">{{ $t(\"dialog.login\") }}</div>\n      </el-form-item>\n      <div class=\"between\">\n        <div @click=\"activeName = 'third'\" class=\"forget\">\n          {{ $t(\"dialog.Forgot\") }}\n        </div>\n        <!-- <el-checkbox-group v-model=\"loginForm.autoLogin\">\n          <el-checkbox :label=\"$t('dialog.auto')\" name=\"type\"></el-checkbox>\n        </el-checkbox-group> -->\n        <div @click=\"activeName = 'register'\" class=\"forget\">\n          {{ $t(\"dialog.register\") }}<i class=\"el-icon-arrow-right\"></i>\n        </div>\n      </div>\n    </el-form>\n    <el-form\n      ref=\"register\"\n      v-if=\"activeName === 'register'\"\n      :model=\"registeredForm\"\n      class=\"demo-form-inline\"\n      :rules=\"registeredRule\"\n    >\n      <el-form-item label=\"\" prop=\"loginName\" key=\"register1\">\n        <el-input\n          v-model=\"registeredForm.loginName\"\n          :placeholder=\"$t('dialog.enteru')\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"\" prop=\"phonenumber\" key=\"register2\">\n        <el-input\n          v-model=\"registeredForm.phonenumber\"\n          :placeholder=\"$t('dialog.enterp')\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"\" prop=\"code\" key=\"register3\">\n        <div class=\"between\">\n          <el-input\n            v-model=\"registeredForm.code\"\n            :placeholder=\"$t('dialog.enterc')\"\n          ></el-input>\n          <el-button\n            type=\"text\"\n            @click=\"onSubmit('registeredForm')\"\n            class=\"code\"\n          >\n            {{ timer ? count + \"s\" : $t(\"dialog.sendc\") }}\n          </el-button>\n        </div>\n      </el-form-item>\n      <el-form-item label=\"\" prop=\"email\" key=\"register4\">\n        <el-input\n          v-model=\"registeredForm.email\"\n          :placeholder=\"$t('dialog.entere')\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"\" prop=\"password\" key=\"register5\">\n        <el-input\n          v-model=\"registeredForm.password\"\n          :placeholder=\"$t('dialog.enterpw')\"\n          type=\"password\"\n          autocomplete=\"new-password\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"\" prop=\"arginPassword\" key=\"register6\">\n        <el-input\n          v-model=\"registeredForm.arginPassword\"\n          :placeholder=\"$t('dialog.enterap')\"\n          type=\"password\"\n        ></el-input>\n      </el-form-item>\n      <div @click=\"onRegistered\" class=\"submit\">\n        {{ $t(\"dialog.register\") }}\n      </div>\n      <!-- <el-form-item label=\"\">\n        <div class=\"between\">\n          <el-checkbox-group v-model=\"registeredForm.autoLogin\">\n            <el-checkbox\n              :label=\"$t('dialog.read')\"\n              name=\"type\"\n            ></el-checkbox>\n          </el-checkbox-group>\n        </div>\n      </el-form-item> -->\n      <div class=\"between mt20\">\n        <div></div>\n        <div @click=\"activeName = 'login'\" class=\"forget\">\n          {{ $t(\"dialog.back\") }}<i class=\"el-icon-arrow-right\"></i>\n        </div>\n      </div>\n    </el-form>\n    <el-form\n      ref=\"updatePwd\"\n      v-if=\"activeName === 'third'\"\n      :model=\"updatePwdForm\"\n      class=\"demo-form-inline\"\n      :rules=\"updatePwdRule\"\n    >\n      <el-form-item label=\"\" prop=\"phonenumber\" key=\"updatePwd1\">\n        <el-input\n          v-model=\"updatePwdForm.phonenumber\"\n          :placeholder=\"$t('dialog.enterp')\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"\" prop=\"code\" key=\"updatePwd2\">\n        <div class=\"between\">\n          <el-input\n            v-model=\"updatePwdForm.code\"\n            :placeholder=\"$t('dialog.code')\"\n          ></el-input>\n          <el-button\n            type=\"text\"\n            @click=\"onSubmit('updatePwdForm')\"\n            class=\"code\"\n          >\n            {{ timer ? count + \"s\" : $t(\"dialog.sendc\") }}\n          </el-button>\n        </div>\n      </el-form-item>\n      <el-form-item label=\"\" prop=\"password\" key=\"updatePwd3\">\n        <el-input\n          v-model=\"updatePwdForm.password\"\n          type=\"password\"\n          :placeholder=\"$t('dialog.enterpw')\"\n          autocomplete=\"new-password\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"\" prop=\"arginPassword\" key=\"updatePwd4\">\n        <el-input\n          v-model=\"updatePwdForm.arginPassword\"\n          type=\"password\"\n          :placeholder=\"$t('dialog.enterap')\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item>\n        <div @click=\"onUpdatePwd\" class=\"submit\">\n          {{ $t(\"dialog.confirm\") }}\n        </div>\n      </el-form-item>\n      <div class=\"between\">\n        <div></div>\n        <div @click=\"activeName = 'login'\" class=\"forget\">\n          {{ $t(\"dialog.back\") }}<i class=\"el-icon-arrow-right\"></i>\n        </div>\n      </div>\n    </el-form>\n  </div>\n</template>\n\n<script>\nclass LoginForm {\n  constructor() {\n    this.loginName = \"\";\n    this.password = \"\";\n    this.code = \"\";\n    this.autoLogin = false;\n  }\n}\nclass RegisteredForm {\n  constructor() {\n    this.loginName = \"\";\n    this.email = \"\";\n    this.phonenumber = \"\";\n    this.password = \"\";\n    this.arginPassword = \"\";\n    this.code = \"\";\n    // this.autoLogin = false;\n  }\n}\nclass UpdatePwdForm {\n  constructor() {\n    this.phonenumber = \"\";\n    this.password = \"\";\n    this.code = \"\";\n    this.arginPassword = \"\";\n  }\n}\n\nimport {\n  Registered,\n  GetCaptchaImage,\n  Login,\n  UpdatePwd,\n  GetCode,\n} from \"@/assets/server/api.js\";\nexport default {\n  data() {\n    return {\n      activeName: \"\",\n      loginForm: new LoginForm(),\n      registeredForm: new RegisteredForm(),\n      updatePwdForm: new UpdatePwdForm(),\n      isForget: false,\n      imgSrc: \"\",\n      loginRule: {\n        loginName: [\n          {\n            required: true,\n            message:\n              this.$t(\"index.switch\") === \"cn\"\n                ? \"请输入登录名\"\n                : \"enter your login name\",\n            trigger: \"blur\",\n          },\n        ],\n        password: [\n          {\n            required: true,\n            pattern: /^(\\w){6,20}$/,\n            message:\n              this.$t(\"index.switch\") === \"cn\"\n                ? \"密码格式不对\"\n                : \"Incorrect password format\",\n            trigger: \"blur\",\n          },\n        ],\n        code: [\n          {\n            required: true,\n            message:\n              this.$t(\"index.switch\") === \"cn\"\n                ? \"请输入验证码\"\n                : \"enter your verification code\",\n            trigger: \"blur\",\n          },\n        ],\n      },\n      registeredRule: {\n        loginName: [\n          {\n            required: true,\n            message:\n              this.$t(\"index.switch\") === \"cn\"\n                ? \"请输入登录名\"\n                : \"enter your login name\",\n            trigger: \"blur\",\n          },\n        ],\n        email: [\n          {\n            required: true,\n            message:\n              this.$t(\"index.switch\") === \"cn\"\n                ? \"请输入正确的邮箱格式\"\n                : \"enter the correct email format\",\n            trigger: \"blur\",\n            pattern: /\\w+@[a-z0-9]+\\.[a-z]{2,4}/,\n          },\n        ],\n        phonenumber: [\n          {\n            required: true,\n            message:\n              this.$t(\"index.switch\") === \"cn\"\n                ? \"请输入正确的手机号\"\n                : \"input the correct mobile phone\",\n            trigger: \"blur\",\n            pattern: /^1[3|4|5|7|8][0-9]\\d{8}$/,\n          },\n        ],\n        password: [\n          {\n            required: true,\n            pattern: /^(\\w){6,20}$/,\n            message:\n              this.$t(\"index.switch\") === \"cn\"\n                ? \"密码格式不对\"\n                : \"Incorrect password format\",\n            trigger: \"blur\",\n          },\n        ],\n        arginPassword: [\n          {\n            required: true,\n            pattern: /^(\\w){6,20}$/,\n            message:\n              this.$t(\"index.switch\") === \"cn\"\n                ? \"密码格式不对\"\n                : \"Incorrect password format\",\n            trigger: \"blur\",\n          },\n        ],\n        code: [\n          {\n            required: true,\n            message:\n              this.$t(\"index.switch\") === \"cn\"\n                ? \"请输入验证码\"\n                : \"enter your verification code\",\n            trigger: \"blur\",\n          },\n        ],\n      },\n      updatePwdRule: {\n        phonenumber: [\n          {\n            required: true,\n            message:\n              this.$t(\"index.switch\") === \"cn\"\n                ? \"请输入登录名\"\n                : \"enter your login name\",\n            trigger: \"blur\",\n            pattern: /^1[3|4|5|7|8][0-9]\\d{8}$/,\n          },\n        ],\n        password: [\n          {\n            required: true,\n            pattern: /^(\\w){6,20}$/,\n            message:\n              this.$t(\"index.switch\") === \"cn\"\n                ? \"密码格式不对\"\n                : \"Incorrect password format\",\n            trigger: \"blur\",\n          },\n        ],\n        password: [\n          {\n            required: true,\n            pattern: /^(\\w){6,20}$/,\n            message:\n              this.$t(\"index.switch\") === \"cn\"\n                ? \"密码格式不对\"\n                : \"Incorrect password format\",\n            trigger: \"blur\",\n          },\n        ],\n        code: [\n          {\n            required: true,\n            message:\n              this.$t(\"index.switch\") === \"cn\"\n                ? \"请输入验证码\"\n                : \"enter your verification code\",\n            trigger: \"blur\",\n          },\n        ],\n      },\n      count: 60,\n      timer: null,\n    };\n  },\n  props: {\n    dialogType: {\n      type: String,\n      default: \"\",\n    },\n  },\n  watch: {\n    dialogType(newValue, oldValue) {\n      this.activeName = newValue;\n    },\n    activeName(newValue, oldValue) {\n      clearInterval(this.timer)\n      this.timer=null\n      this.count = 60\n    }\n  },\n  created() {\n    this.getCaptchaImage();\n    this.activeName = this.dialogType;\n  },\n  methods: {\n    async onSubmit(type) {\n      let reg = /^1[3|4|5|7|8][0-9]\\d{8}$/;\n      if (!reg.test(this[type].phonenumber) || this[type].phonenumber === \"\") {\n        return this.$notify({\n          type: \"warning\",\n          message:\n            this.$t(\"index.switch\") === \"cn\"\n              ? \"请输入正确手机号\"\n              : \"enter the correct phone number\",\n        });\n      }\n      let str = ''\n      if(type === 'registeredForm') {\n        str = this[type].phonenumber + '/reg'\n      } else {\n        str = this[type].phonenumber + '/pwd'\n      }\n      const data = await GetCode(str)\n      // console.log(data);\n      if(data.code=='500'){\n         return this.$notify({\n              type: \"error\",\n              message:\n               data.msg\n            });\n      }\n      this.timer=setInterval(() => {\n        this.count--\n        if (this.count<=0) {\n          clearInterval(this.timer)\n          this.timer=null\n          this.count = 60\n        }\n      }, 1000);\n      // console.log(data, \"data\");\n    },\n    async onRegistered() {\n      this.$refs[\"register\"].validate(async (valid) => {\n        if (valid) {\n          if (\n            this.registeredForm.password !== this.registeredForm.arginPassword\n          ) {\n            return this.$notify({\n              type: \"error\",\n              message:\n                this.$t(\"index.switch\") === \"cn\"\n                  ? \"两次密码输入不一致\"\n                  : \"passwords do not match\",\n            });\n          }\n          const data = await Registered({ ...this.registeredForm });\n          if (data.code === 0) {\n            this.$notify({\n              type: \"success\",\n              message:\n                this.$t(\"index.switch\") === \"cn\" ? \"注册成功\" : \"success\",\n            });\n            this.activeName = \"login\";\n            this.registeredForm = new RegisteredForm();\n            this.count = 60\n            clearInterval(this.timer)\n            this.timer=null\n          } else {\n            this.$notify({ type: \"error\", message: data.msg });\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    async getCaptchaImage() {\n      const data = await GetCaptchaImage();\n      this.imgSrc = window.URL.createObjectURL(data.data);\n    },\n    onLogin() {\n      this.$refs[\"login\"].validate(async (valid) => {\n        if (valid) {\n          const data = await Login({ ...this.loginForm });\n          if (data.code === 0) {\n            this.$notify({\n              type: \"success\",\n              message:\n                this.$t(\"index.switch\") === \"cn\" ? \"登录成功！\" : \"success\",\n            });\n            this.$emit(\"close\");\n            this.$emit(\"showUserInfo\", data.data);\n            this.$emit(\"checkUsersStatus\");\n            localStorage.setItem(\"username\", data.data);\n            this.loginForm = new LoginForm();\n          } else {\n            this.$notify({ type: \"error\", message: data.msg });\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    async onUpdatePwd() {\n      this.$refs[\"updatePwd\"].validate(async (valid) => {\n        if (valid) {\n          if (\n            this.updatePwdForm.password !== this.updatePwdForm.arginPassword\n          ) {\n            return this.$notify({\n              type: \"error\",\n              message:\n                this.$t(\"index.switch\") === \"cn\"\n                  ? \"两次密码输入不一致\"\n                  : \"passwords do not match\",\n            });\n          }\n          const data = await UpdatePwd({ ...this.updatePwdForm });\n          if (data.code === 0) {\n            this.$notify({\n              type: \"success\",\n              message:\n                this.$t(\"index.switch\") === \"cn\"\n                  ? \"密码修改成功，请登录！\"\n                  : \"success\",\n            });\n            this.activeName = \"login\";\n            this.updatePwdForm = new UpdatePwdForm();\n          } else {\n            this.$notify({ type: \"error\", message: data.msg });\n          }\n        } else {\n          console.log(\"error submit!!\");\n          return false;\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.Login-m {\n  .form_all_title {\n font-size: 36px;\nfont-family: PingFang SC;\nfont-weight: 600;\nline-height: 50px;\ncolor: #0D051F;\nopacity: 1;\n  margin-bottom: 40px;\n  text-align: center;\n}\n\n  .logo {\n    width: 264px;\n    margin-left: 50%;\n    transform: translateX(-50%);\n    margin-bottom: 42px;\n  }\n  .submit {\n    width: 492px;\n    height: 72px;\n    line-height: 72px;\n    text-align: center;\n    background: #5432F4;\n    border-radius: 8px;\n    font-size: 28px;\n    color: #fff;\n    margin-top: 48px;\n  }\n  .mt20 {\n    margin-top: 20px;\n  }\n  .between {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 22px;\n    color: #5432F4;\n    img {\n      height: 80px;\n      width: 160px;\n      margin-left: 10px;\n    }\n    .code {\n      margin-left: 24px;\n      color: #5432F4;\n      width: 260px;\n      text-align: center;\n    }\n    .forget{\n      display: flex;\n      align-items: center;\n    }\n  }\n}\n</style>\n<style lang=\"less\">\n.Login-m {\n  .between {\n    .el-checkbox__label {\n      font-size: 20px;\n      margin-left: -12px;\n    }\n    .el-checkbox__input.is-checked + .el-checkbox__label {\n      color: #676767;\n    }\n    .el-checkbox__input.is-focus .el-checkbox__inner {\n      border-color: #dcdfe6;\n    }\n    .el-checkbox__input.is-checked .el-checkbox__inner {\n      background-color: #5432F4;\n      border-color: #5432F4;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/components/m"}]}