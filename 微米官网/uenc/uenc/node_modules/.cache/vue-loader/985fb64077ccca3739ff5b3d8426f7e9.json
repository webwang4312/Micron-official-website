{"remainingRequest":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\src\\components\\m\\ValidateCode.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\src\\components\\m\\ValidateCode.vue","mtime":1623835676982},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623717554021},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\babel-loader\\lib\\index.js","mtime":1623717553223},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623717554021},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\vue-loader\\lib\\index.js","mtime":1623717591153}],"contextDependencies":[],"result":["//\n//\n//\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      codes: [],\r\n      ctx: \"\",\r\n      colors: [\"red\", \"yellow\", \"blue\", \"green\", \"pink\", \"black\"],\r\n      code_Len: 4\r\n    };\r\n  },\r\n  mounted() {\r\n    this.draw();\r\n  },\r\n  computed: {\r\n    codeString() {\r\n      let result = \"\";\r\n      for (let i = 0; i < this.codes.length; i++) {\r\n        result += this.codes[i];\r\n      }\r\n      return result.toUpperCase();\r\n    }\r\n  },\r\n  watch: {\r\n    codeString: function(newValue) {\r\n      this.$emit(\"change\", newValue);\r\n    }\r\n  },\r\n  methods: {\r\n    generateRandom() {\r\n      this.codes = [];\r\n      const chars = \"abcdefghijkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789\";\r\n      const charsArr = chars.split(\"\");\r\n \r\n      for (let i = 0; i < this.code_Len; i++) {\r\n        const num = Math.floor(Math.random() * charsArr.length);\r\n        this.codes.push(charsArr[num]);\r\n      }\r\n    },\r\n    draw() {\r\n      this.generateRandom();\r\n      this.drawText();\r\n    },\r\n    drawLine() {\r\n      const lineNumber = 3; // 线条条数\r\n      const lineX = 140;\r\n      const lineY = 30; // 最大线条坐标\r\n      for (let i = 0; i < lineNumber; i++) {\r\n        this.ctx.strokeStyle = this.colors[Math.floor(Math.random() * 5)];\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(\r\n          Math.floor(Math.random() * lineX),\r\n          Math.floor(Math.random() * lineY)\r\n        );\r\n        this.ctx.lineTo(\r\n          Math.floor(Math.random() * lineX),\r\n          Math.floor(Math.random() * lineY)\r\n        );\r\n        this.ctx.stroke();\r\n      }\r\n    },\r\n    drawText() {\r\n      const canvas = this.$refs[\"canvas\"];\r\n      this.ctx = canvas.getContext(\"2d\");\r\n \r\n      this.ctx.fillStyle = \"#BFEFFF\";\r\n      this.ctx.fillRect(0, 0, 140, 40);\r\n      this.ctx.font = \"20px Verdana\";\r\n \r\n      let x = 15;\r\n \r\n      for (let i = 0; i < this.code_Len; i++) {\r\n        this.ctx.fillStyle = this.colors[Math.floor(Math.random() * 5)];\r\n        this.ctx.fillText(this.codes[i], x, 25);\r\n        x = x + 15;\r\n      }\r\n \r\n      this.drawLine();\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["ValidateCode.vue"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ValidateCode.vue","sourceRoot":"src/components/m","sourcesContent":["<template>\r\n  <canvas ref=\"canvas\" @click=\"draw\" width=\"80\" height=\"40\" style=\"cursor: pointer;\"></canvas>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      codes: [],\r\n      ctx: \"\",\r\n      colors: [\"red\", \"yellow\", \"blue\", \"green\", \"pink\", \"black\"],\r\n      code_Len: 4\r\n    };\r\n  },\r\n  mounted() {\r\n    this.draw();\r\n  },\r\n  computed: {\r\n    codeString() {\r\n      let result = \"\";\r\n      for (let i = 0; i < this.codes.length; i++) {\r\n        result += this.codes[i];\r\n      }\r\n      return result.toUpperCase();\r\n    }\r\n  },\r\n  watch: {\r\n    codeString: function(newValue) {\r\n      this.$emit(\"change\", newValue);\r\n    }\r\n  },\r\n  methods: {\r\n    generateRandom() {\r\n      this.codes = [];\r\n      const chars = \"abcdefghijkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789\";\r\n      const charsArr = chars.split(\"\");\r\n \r\n      for (let i = 0; i < this.code_Len; i++) {\r\n        const num = Math.floor(Math.random() * charsArr.length);\r\n        this.codes.push(charsArr[num]);\r\n      }\r\n    },\r\n    draw() {\r\n      this.generateRandom();\r\n      this.drawText();\r\n    },\r\n    drawLine() {\r\n      const lineNumber = 3; // 线条条数\r\n      const lineX = 140;\r\n      const lineY = 30; // 最大线条坐标\r\n      for (let i = 0; i < lineNumber; i++) {\r\n        this.ctx.strokeStyle = this.colors[Math.floor(Math.random() * 5)];\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(\r\n          Math.floor(Math.random() * lineX),\r\n          Math.floor(Math.random() * lineY)\r\n        );\r\n        this.ctx.lineTo(\r\n          Math.floor(Math.random() * lineX),\r\n          Math.floor(Math.random() * lineY)\r\n        );\r\n        this.ctx.stroke();\r\n      }\r\n    },\r\n    drawText() {\r\n      const canvas = this.$refs[\"canvas\"];\r\n      this.ctx = canvas.getContext(\"2d\");\r\n \r\n      this.ctx.fillStyle = \"#BFEFFF\";\r\n      this.ctx.fillRect(0, 0, 140, 40);\r\n      this.ctx.font = \"20px Verdana\";\r\n \r\n      let x = 15;\r\n \r\n      for (let i = 0; i < this.code_Len; i++) {\r\n        this.ctx.fillStyle = this.colors[Math.floor(Math.random() * 5)];\r\n        this.ctx.fillText(this.codes[i], x, 25);\r\n        x = x + 15;\r\n      }\r\n \r\n      this.drawLine();\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}