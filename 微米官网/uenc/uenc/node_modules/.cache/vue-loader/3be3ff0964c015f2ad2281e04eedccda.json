{"remainingRequest":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\src\\components\\pc\\CheckUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\src\\components\\pc\\CheckUser.vue","mtime":1623717594298},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623717554021},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1623717589083},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\babel-loader\\lib\\index.js","mtime":1623717553223},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623717554021},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\vue-loader\\lib\\index.js","mtime":1623717591153}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nclass CheckForm {\r\n  constructor() {\r\n    this.balance = '';\r\n    this.address = \"\";\r\n    this.hash = \"\";\r\n  }\r\n}\r\nimport { BindWallet,GetWalletAddress } from \"@/assets/server/api.js\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      checkForm: new CheckForm(),\r\n      path: '1GzfAaZc9MDRzYV1ZERxRMHZtHaXy2hqGH',\r\n      loading:false\r\n    };\r\n  },\r\n  mounted () {\r\n    this.GetWalletAddress();\r\n  },\r\n  methods: {\r\n    async GetWalletAddress(){\r\n      const userName = localStorage.getItem(\"username\");\r\n        let datas = new FormData();\r\n          datas.append(\"loginName\", userName);\r\n      const {data} = await GetWalletAddress(datas)\r\n      this.path = data.address\r\n      this.checkForm.balance = data.number\r\n    },\r\n    close() {\r\n      this.$emit(\"close\");\r\n    },\r\n    async checkSubmit() {\r\n     \r\n      let loginName = localStorage.getItem(\"username\");\r\n      for (const key in this.checkForm) {\r\n        const element = this.checkForm[key];\r\n        if (element === \"\" || !element) {\r\n          return this.$message.error( this.$t(\"index.switch\") === \"cn\" ?\"不能为空\":'Can it be empty');\r\n        }\r\n      }\r\n      this.loading = true\r\n      this.checkForm.loginName = loginName;\r\n      const data = await BindWallet({ ...this.checkForm });\r\n      if (data.code === 0) {\r\n        this.$message.success( this.$t(\"index.switch\") === \"cn\" ?\"钱包绑定成功！\":'success');\r\n        this.$emit(\"close\");\r\n        this.checkForm = new CheckForm();\r\n        this.loading = false\r\n      } else {\r\n        this.$message.error(data.msg);\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["CheckUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CheckUser.vue","sourceRoot":"src/components/pc","sourcesContent":["<!--\r\n * @Author: yaoyuting\r\n * @Date: 2021-04-16 08:54:18\r\n * @LastEditors: yaoyuting\r\n * @LastEditTime: 2021-05-19 21:17:32\r\n * @Descripttion: \r\n-->\r\n<template>\r\n  <div class=\"Check\">\r\n    <div class=\"title\">{{$t(\"dialog.Binding\")}}</div>\r\n    <el-form :model=\"checkForm\" class=\"demo-form-inline\">\r\n      <el-form-item :label=\"$t('dialog.Transfer')\">\r\n        <el-input v-model=\"path\" disabled></el-input>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('dialog.transferred')\">\r\n        <el-input v-model=\"checkForm.balance\" disabled></el-input>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('dialog.Personal')\">\r\n        <el-input v-model=\"checkForm.address\" :placeholder=\"$t('dialog.addr')\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('dialog.hash')\">\r\n        <el-input v-model=\"checkForm.hash\" :placeholder=\"$t('dialog.phash')\"></el-input>\r\n      </el-form-item>\r\n      <div style=\"color: red;\">{{$t(\"dialog.Note\")}}</div>\r\n      <div class=\"btns\">\r\n        <div @click=\"checkSubmit\" v-loading=\"loading\" id='btnsolve'>{{$t(\"dialog.confirm\")}}</div>\r\n        <div class=\"r\" @click=\"close()\" >{{$t(\"dialog.cancel\")}}</div>\r\n\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nclass CheckForm {\r\n  constructor() {\r\n    this.balance = '';\r\n    this.address = \"\";\r\n    this.hash = \"\";\r\n  }\r\n}\r\nimport { BindWallet,GetWalletAddress } from \"@/assets/server/api.js\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      checkForm: new CheckForm(),\r\n      path: '1GzfAaZc9MDRzYV1ZERxRMHZtHaXy2hqGH',\r\n      loading:false\r\n    };\r\n  },\r\n  mounted () {\r\n    this.GetWalletAddress();\r\n  },\r\n  methods: {\r\n    async GetWalletAddress(){\r\n      const userName = localStorage.getItem(\"username\");\r\n        let datas = new FormData();\r\n          datas.append(\"loginName\", userName);\r\n      const {data} = await GetWalletAddress(datas)\r\n      this.path = data.address\r\n      this.checkForm.balance = data.number\r\n    },\r\n    close() {\r\n      this.$emit(\"close\");\r\n    },\r\n    async checkSubmit() {\r\n     \r\n      let loginName = localStorage.getItem(\"username\");\r\n      for (const key in this.checkForm) {\r\n        const element = this.checkForm[key];\r\n        if (element === \"\" || !element) {\r\n          return this.$message.error( this.$t(\"index.switch\") === \"cn\" ?\"不能为空\":'Can it be empty');\r\n        }\r\n      }\r\n      this.loading = true\r\n      this.checkForm.loginName = loginName;\r\n      const data = await BindWallet({ ...this.checkForm });\r\n      if (data.code === 0) {\r\n        this.$message.success( this.$t(\"index.switch\") === \"cn\" ?\"钱包绑定成功！\":'success');\r\n        this.$emit(\"close\");\r\n        this.checkForm = new CheckForm();\r\n        this.loading = false\r\n      } else {\r\n        this.$message.error(data.msg);\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.el-loading-spinner{\r\n  width: 150px;\r\n  height: 50px;\r\ntop: 0%;\r\n// position: absolute;\r\n//  left:-50px;\r\n}\r\n  .Check{\r\n    text-align: left;\r\n    .title{\r\n      font-size: 28px;\r\n      color: #313131;\r\n      font-weight: 500;\r\n      padding-bottom: 40px;\r\n      text-align: center;\r\n    }\r\n    .el-form-item__label{\r\n      font-size: 18px;\r\n      color: #666;\r\n    }\r\n    .el-input__inner,input{\r\n      height: 40px;\r\n      font-size: 18px;\r\n    }\r\n    input::placeholder{\r\n      font-size:  18px;\r\n    }\r\n    .el-checkbox__inner{\r\n      width: 22px;\r\n      height: 22px;\r\n    }\r\n    .el-checkbox__input{\r\n      vertical-align: sub;\r\n    }\r\n    .el-checkbox__inner::after{\r\n      height: 14px;\r\n      left: 6px;\r\n      width: 6px;\r\n      top: 0px;\r\n    }\r\n    .el-checkbox__label{\r\n      font-size: 24px;\r\n    }\r\n    .btns{\r\n      padding: 36px 0;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      div{\r\n       width: 150px;\r\nheight: 50px;\r\n        text-align: center;\r\n        line-height: 50px;\r\n        background: #5432F4;\r\n        border-radius: 4px;\r\n        font-size: 20px;\r\n        color: #fff;\r\n        margin: 0 0px;\r\n        cursor: pointer;\r\n       \r\n      }\r\n      .r{\r\n        background: #afb7e0;\r\n      }\r\n    }\r\n  }\r\n</style>\r\n"]}]}