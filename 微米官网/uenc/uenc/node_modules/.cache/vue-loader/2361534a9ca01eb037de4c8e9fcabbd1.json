{"remainingRequest":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\src\\components\\m\\CheckUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\src\\components\\m\\CheckUser.vue","mtime":1623717594293},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623717554021},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\babel-loader\\lib\\index.js","mtime":1623717553223},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1623717554021},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\vue-loader\\lib\\index.js","mtime":1623717591153}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nclass CheckForm {\r\n  constructor() {\r\n    this.balance = Math.random().toFixed(3);\r\n    this.address = \"\";\r\n    this.hash = \"\";\r\n  }\r\n}\r\nimport { BindWallet,GetWalletAddress } from \"@/assets/server/api.js\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      checkForm: new CheckForm(),\r\n      path: '1GzfAaZc9MDRzYV1ZERxRMHZtHaXy2hqGH',\r\n      loading: false,\r\n      address:'',\r\n      hash:''\r\n    };\r\n  },\r\n  mounted () {\r\n    // console.log(this.$i18n.locale);\r\n    if(this.$i18n.locale=='zh'){\r\n this.address='请输入您的钱包地址'\r\n    this.hash='请输入交易哈希'\r\n    }\r\n    else{\r\n       this.address='Please enter your wallet address'\r\n    this.hash='Please enter transaction hash'\r\n    }\r\n   \r\n    this.GetWalletAddress();\r\n  },\r\n  methods: {\r\n    async GetWalletAddress(){\r\n      const userName = localStorage.getItem(\"username\");\r\n     \r\n        let datas = new FormData();\r\n          datas.append(\"loginName\", userName);\r\n      const {data} = await GetWalletAddress(datas)\r\n      this.path = data.address\r\n      this.checkForm.balance = data.number\r\n    },\r\n    close() {\r\n      this.$emit(\"close\");\r\n    },\r\n    async checkSubmit() {\r\n      \r\n      let loginName = localStorage.getItem(\"username\");\r\n      for (const key in this.checkForm) {\r\n        const element = this.checkForm[key];\r\n        if (element === \"\" || !element) {\r\n          return this.$notify({ type: 'danger', message: this.$t(\"index.switch\") === \"cn\" ?\"不能为空\":'Can it be empty'}) \r\n        }\r\n      }\r\n      this.loading = true\r\n      this.checkForm.loginName = loginName;\r\n      const data = await BindWallet({ ...this.checkForm });\r\n      if (data.code === 0) {\r\n        this.$notify({ type: 'success', message: this.$t(\"index.switch\") === \"cn\" ?\"钱包绑定成功！\":'success'}) \r\n        this.$emit(\"close\");\r\n        this.checkForm = new CheckForm();\r\n        this.loading = false;\r\n        //  location.reload();\r\n         window.location.reload();\r\n        \r\n      } else {\r\n        this.$notify({ type: 'danger', message: data.msg })\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["CheckUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CheckUser.vue","sourceRoot":"src/components/m","sourcesContent":["<!--\r\n * @Author: yaoyuting\r\n * @Date: 2021-04-16 08:54:18\r\n * @LastEditors: yaoyuting\r\n * @LastEditTime: 2021-05-19 21:13:05\r\n * @Descripttion: \r\n-->\r\n<template>\r\n  <div class=\"Check-m\">\r\n    <div class=\"title\">{{$t('dialog.Binding')}}</div>\r\n    <el-form :model=\"checkForm\" class=\"demo-form-inline\">\r\n      <el-form-item :label=\"$t('dialog.Transfer')\">\r\n        <el-input v-model=\"path\" disabled></el-input>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('dialog.transferred')\">\r\n        <el-input v-model=\"checkForm.balance\" disabled></el-input>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('dialog.Personal')\">\r\n        <el-input v-model=\"checkForm.address\" :placeholder=\"address\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item :label=\"$t('dialog.hash')\">\r\n        <el-input v-model=\"checkForm.hash\" :placeholder=\"hash\"></el-input>\r\n      </el-form-item>\r\n      <div class=\"bind\">{{$t('dialog.Note')}}</div>\r\n      <div class=\"btns\">\r\n        <div class=\"submit close\" @click=\"close()\" >{{$t('dialog.cancel')}}</div>\r\n        <div class=\"submit\" @click=\"checkSubmit\" v-loading=\"loading\">{{$t('dialog.confirm')}}</div>\r\n\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nclass CheckForm {\r\n  constructor() {\r\n    this.balance = Math.random().toFixed(3);\r\n    this.address = \"\";\r\n    this.hash = \"\";\r\n  }\r\n}\r\nimport { BindWallet,GetWalletAddress } from \"@/assets/server/api.js\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      checkForm: new CheckForm(),\r\n      path: '1GzfAaZc9MDRzYV1ZERxRMHZtHaXy2hqGH',\r\n      loading: false,\r\n      address:'',\r\n      hash:''\r\n    };\r\n  },\r\n  mounted () {\r\n    // console.log(this.$i18n.locale);\r\n    if(this.$i18n.locale=='zh'){\r\n this.address='请输入您的钱包地址'\r\n    this.hash='请输入交易哈希'\r\n    }\r\n    else{\r\n       this.address='Please enter your wallet address'\r\n    this.hash='Please enter transaction hash'\r\n    }\r\n   \r\n    this.GetWalletAddress();\r\n  },\r\n  methods: {\r\n    async GetWalletAddress(){\r\n      const userName = localStorage.getItem(\"username\");\r\n     \r\n        let datas = new FormData();\r\n          datas.append(\"loginName\", userName);\r\n      const {data} = await GetWalletAddress(datas)\r\n      this.path = data.address\r\n      this.checkForm.balance = data.number\r\n    },\r\n    close() {\r\n      this.$emit(\"close\");\r\n    },\r\n    async checkSubmit() {\r\n      \r\n      let loginName = localStorage.getItem(\"username\");\r\n      for (const key in this.checkForm) {\r\n        const element = this.checkForm[key];\r\n        if (element === \"\" || !element) {\r\n          return this.$notify({ type: 'danger', message: this.$t(\"index.switch\") === \"cn\" ?\"不能为空\":'Can it be empty'}) \r\n        }\r\n      }\r\n      this.loading = true\r\n      this.checkForm.loginName = loginName;\r\n      const data = await BindWallet({ ...this.checkForm });\r\n      if (data.code === 0) {\r\n        this.$notify({ type: 'success', message: this.$t(\"index.switch\") === \"cn\" ?\"钱包绑定成功！\":'success'}) \r\n        this.$emit(\"close\");\r\n        this.checkForm = new CheckForm();\r\n        this.loading = false;\r\n        //  location.reload();\r\n         window.location.reload();\r\n        \r\n      } else {\r\n        this.$notify({ type: 'danger', message: data.msg })\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.Check-m{\r\n  .title{\r\n    font-size: 40px;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n  }\r\n  .el-form-item {\r\n      margin-bottom: 0;\r\n  }\r\n  .bind{\r\n    font-size: 20px;\r\n    color: #B33939;\r\n    margin-top: 18px;\r\n  }\r\n  .btns{\r\n    display: flex;\r\n    justify-content: space-around;\r\n    margin-top: 32px;\r\n  }\r\n  .submit {\r\n    width: 164px;\r\n    height: 72px;\r\n    line-height: 72px;\r\n    text-align: center;\r\n    background: #4B3EFF;\r\n    border-radius: 8px;\r\n    font-size: 28px;\r\n    color: #fff;\r\n  }\r\n  .close{\r\n    background: #ECECEC;\r\n    color: #9F9F9F;\r\n  }\r\n    .between{\r\n      .el-checkbox__label{\r\n        font-size: 20px;\r\n        margin-left: -12px;\r\n      }\r\n      \r\n    }\r\n  }\r\n</style>\r\n"]}]}