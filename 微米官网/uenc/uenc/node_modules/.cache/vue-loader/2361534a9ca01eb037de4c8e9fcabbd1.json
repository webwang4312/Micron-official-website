{"remainingRequest":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\src\\components\\m\\CheckUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\src\\components\\m\\CheckUser.vue","mtime":1622778983218},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\weimi\\Micron-official-website\\微米官网\\uenc\\uenc\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nclass CheckForm {\n  constructor() {\n    this.balance = Math.random().toFixed(3);\n    this.address = \"\";\n    this.hash = \"\";\n  }\n}\nimport { BindWallet,GetWalletAddress } from \"@/assets/server/api.js\";\nexport default {\n  data() {\n    return {\n      checkForm: new CheckForm(),\n      path: '1GzfAaZc9MDRzYV1ZERxRMHZtHaXy2hqGH',\n      loading: false,\n      address:'',\n      hash:''\n    };\n  },\n  mounted () {\n    // console.log(this.$i18n.locale);\n    if(this.$i18n.locale=='zh'){\n this.address='请输入您的钱包地址'\n    this.hash='请输入交易哈希'\n    }\n    else{\n       this.address='Please enter your wallet address'\n    this.hash='Please enter transaction hash'\n    }\n   \n    this.GetWalletAddress();\n  },\n  methods: {\n    async GetWalletAddress(){\n      const userName = localStorage.getItem(\"username\");\n     \n        let datas = new FormData();\n          datas.append(\"loginName\", userName);\n      const {data} = await GetWalletAddress(datas)\n      this.path = data.address\n      this.checkForm.balance = data.number\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    async checkSubmit() {\n      \n      let loginName = localStorage.getItem(\"username\");\n      for (const key in this.checkForm) {\n        const element = this.checkForm[key];\n        if (element === \"\" || !element) {\n          return this.$notify({ type: 'danger', message: this.$t(\"index.switch\") === \"cn\" ?\"不能为空\":'Can it be empty'}) \n        }\n      }\n      this.loading = true\n      this.checkForm.loginName = loginName;\n      const data = await BindWallet({ ...this.checkForm });\n      if (data.code === 0) {\n        this.$notify({ type: 'success', message: this.$t(\"index.switch\") === \"cn\" ?\"钱包绑定成功！\":'success'}) \n        this.$emit(\"close\");\n        this.checkForm = new CheckForm();\n        this.loading = false;\n        //  location.reload();\n         window.location.reload();\n        \n      } else {\n        this.$notify({ type: 'danger', message: data.msg })\n        this.loading = false\n      }\n    }\n  }\n};\n",{"version":3,"sources":["CheckUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CheckUser.vue","sourceRoot":"src/components/m","sourcesContent":["<!--\n * @Author: yaoyuting\n * @Date: 2021-04-16 08:54:18\n * @LastEditors: yaoyuting\n * @LastEditTime: 2021-05-19 21:13:05\n * @Descripttion: \n-->\n<template>\n  <div class=\"Check-m\">\n    <div class=\"title\">{{$t('dialog.Binding')}}</div>\n    <el-form :model=\"checkForm\" class=\"demo-form-inline\">\n      <el-form-item :label=\"$t('dialog.Transfer')\">\n        <el-input v-model=\"path\" disabled></el-input>\n      </el-form-item>\n      <el-form-item :label=\"$t('dialog.transferred')\">\n        <el-input v-model=\"checkForm.balance\" disabled></el-input>\n      </el-form-item>\n      <el-form-item :label=\"$t('dialog.Personal')\">\n        <el-input v-model=\"checkForm.address\" :placeholder=\"address\"></el-input>\n      </el-form-item>\n      <el-form-item :label=\"$t('dialog.hash')\">\n        <el-input v-model=\"checkForm.hash\" :placeholder=\"hash\"></el-input>\n      </el-form-item>\n      <div class=\"bind\">{{$t('dialog.Note')}}</div>\n      <div class=\"btns\">\n        <div class=\"submit close\" @click=\"close()\" >{{$t('dialog.cancel')}}</div>\n        <div class=\"submit\" @click=\"checkSubmit\" v-loading=\"loading\">{{$t('dialog.confirm')}}</div>\n\n      </div>\n    </el-form>\n  </div>\n</template>\n\n<script>\nclass CheckForm {\n  constructor() {\n    this.balance = Math.random().toFixed(3);\n    this.address = \"\";\n    this.hash = \"\";\n  }\n}\nimport { BindWallet,GetWalletAddress } from \"@/assets/server/api.js\";\nexport default {\n  data() {\n    return {\n      checkForm: new CheckForm(),\n      path: '1GzfAaZc9MDRzYV1ZERxRMHZtHaXy2hqGH',\n      loading: false,\n      address:'',\n      hash:''\n    };\n  },\n  mounted () {\n    // console.log(this.$i18n.locale);\n    if(this.$i18n.locale=='zh'){\n this.address='请输入您的钱包地址'\n    this.hash='请输入交易哈希'\n    }\n    else{\n       this.address='Please enter your wallet address'\n    this.hash='Please enter transaction hash'\n    }\n   \n    this.GetWalletAddress();\n  },\n  methods: {\n    async GetWalletAddress(){\n      const userName = localStorage.getItem(\"username\");\n     \n        let datas = new FormData();\n          datas.append(\"loginName\", userName);\n      const {data} = await GetWalletAddress(datas)\n      this.path = data.address\n      this.checkForm.balance = data.number\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    async checkSubmit() {\n      \n      let loginName = localStorage.getItem(\"username\");\n      for (const key in this.checkForm) {\n        const element = this.checkForm[key];\n        if (element === \"\" || !element) {\n          return this.$notify({ type: 'danger', message: this.$t(\"index.switch\") === \"cn\" ?\"不能为空\":'Can it be empty'}) \n        }\n      }\n      this.loading = true\n      this.checkForm.loginName = loginName;\n      const data = await BindWallet({ ...this.checkForm });\n      if (data.code === 0) {\n        this.$notify({ type: 'success', message: this.$t(\"index.switch\") === \"cn\" ?\"钱包绑定成功！\":'success'}) \n        this.$emit(\"close\");\n        this.checkForm = new CheckForm();\n        this.loading = false;\n        //  location.reload();\n         window.location.reload();\n        \n      } else {\n        this.$notify({ type: 'danger', message: data.msg })\n        this.loading = false\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.Check-m{\n  .title{\n    font-size: 40px;\n    margin-bottom: 20px;\n    text-align: center;\n  }\n  .el-form-item {\n      margin-bottom: 0;\n  }\n  .bind{\n    font-size: 20px;\n    color: #B33939;\n    margin-top: 18px;\n  }\n  .btns{\n    display: flex;\n    justify-content: space-around;\n    margin-top: 32px;\n  }\n  .submit {\n    width: 164px;\n    height: 72px;\n    line-height: 72px;\n    text-align: center;\n    background: #4B3EFF;\n    border-radius: 8px;\n    font-size: 28px;\n    color: #fff;\n  }\n  .close{\n    background: #ECECEC;\n    color: #9F9F9F;\n  }\n    .between{\n      .el-checkbox__label{\n        font-size: 20px;\n        margin-left: -12px;\n      }\n      \n    }\n  }\n</style>\n"]}]}